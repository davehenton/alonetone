# Blobs for all asset fixtures
valid_mp3_original:
  # Blob points to object uploaded through Paperclip in the past so its key
  # is not a secure token like the rest of the blobs.
  key: mp3/1/Song1.mp3
  filename: Song1.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 10.years.ago %>
valid_zip_original:
  key: mp3/2/MySongs.zip
  filename: MySongs.zip
  content_type: application/zip
  metadata: {}
  byte_size: <%= 10.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03
invalid_file_original:
  key: mp3/3/Somefile.png
  filename: Somefile.png
  content_type: image/png
  metadata: {}
  byte_size: <%= 1.megabyte %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 1.day.ago.to_s :db %>
valid_arthur_mp3_original:
  key: mp3/4/Song5.mp3
  filename: Song5.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03
too_big_file_original:
  key: mp3/5/Song1.mp3
  filename: Song1.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 61.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03
valid_mp3_2_original:
  key: mp3/6/Song1.mp3
  filename: Song1.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03
private_track_original:
  key: mp3/7/Song7.mp3
  filename: Song7.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03
spam_track_original:
  key: mp3/8/Song6.mp3
  filename: Song6.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: 2007-04-08 13:00:03

will_studd_rockfort_combalou_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename: Untitled Copy 1.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 2.8.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 3.months.ago %>
will_studd_rockfort_white_wild_tangy_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename:  Untitled Copy 2 premix.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 2.8.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 3.months.ago %>
will_studd_magnificent_lacaune_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename:  mixs for will 3.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 4.5.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 3.months.ago %>
will_studd_appellation_controlee_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename:  4.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 2.4.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 2.months.ago %>

henri_willig_finest_cheese_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename:  track-1.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 1.3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 1.month.ago %>
henri_willig_the_goat_original:
  key: <%= ActiveStorage::Blob.generate_unique_secure_token %>
  filename:  track-2.mp3
  content_type: audio/mpeg
  metadata: {}
  byte_size: <%= 2.3.megabytes %>
  checksum: <%= Digest::MD5.base64digest('OK!') %>
  created_at: <%= 1.month.ago %>
